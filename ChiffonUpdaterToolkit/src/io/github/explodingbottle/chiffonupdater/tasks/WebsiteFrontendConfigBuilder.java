/*
 * This file is part of ChiffonUpdater
 *
 * SPDX-License-Identifier: MIT
 */

package io.github.explodingbottle.chiffonupdater.tasks;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;

import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

import io.github.explodingbottle.chiffonupdater.GlobalLogger;
import io.github.explodingbottle.chiffonupdater.ToolkitWindow;
import io.github.explodingbottle.chiffonupdater.project.WebsiteInfo;

public class WebsiteFrontendConfigBuilder extends ToolkitTask {

	private WebsiteInfo webinfs;
	private GlobalLogger logger;

	public WebsiteFrontendConfigBuilder(ToolkitWindow owner, WebsiteInfo webinfs, GlobalLogger logger) {
		super(owner);
		this.webinfs = webinfs;
		this.logger = logger;
		setShouldImpactMainWindow(true);
	}

	@Override
	public void runTask() {
		JFileChooser chooser = new JFileChooser();
		chooser.setSelectedFile(new File("webcucfg.js"));
		chooser.setFileFilter(new FileNameExtensionFilter("JavaScript files", "js"));
		if (chooser.showSaveDialog(returnWindow()) == JFileChooser.APPROVE_OPTION) {
			File targetFile = chooser.getSelectedFile();
			try (BufferedWriter output = new BufferedWriter(new FileWriter(targetFile))) {
				output.write("/* Configuration file generated by the Chiffon Updater Toolkit */\n\n");
				output.write("const cfg_backendUrl = \"" + webinfs.getBackendUrl() + "\";\n");
				output.write("const cfg_frontendConfigured = true;\n");
			} catch (IOException e) {
				logger.printThrowable(e);
			}
			logger.print("Configuration file built.");
		}
	}
}
